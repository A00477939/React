{"ast":null,"code":"var _jsxFileName = \"/Users/hrithikarora/Documents/SMU/Assignment/FIRST/my-app/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Weather = () => {\n  _s();\n  const [temperature, setTemperature, setWeatherImage] = useState(null);\n  useEffect(() => {\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=Halifax,Canada&APPID=c70084a5e8a2058ce8a54ff0f61a4afe&units=metric').then(response => response.json()).then(data => {\n      const temp = data.main.temp;\n      setTemperature(temp);\n    });\n    if (temperature <= 10) {\n      setWeatherImage('cold.png');\n    } else if (temperature > 10 && temperature < 20) {\n      setWeatherImage('mild.png');\n    } else {\n      setWeatherImage('sunny.png');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [temperature, \"\\xB0C\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Weather, \"H/WM4fr4Pn7Fcj5PFJROfu2c+6w=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Weather","_s","temperature","setTemperature","setWeatherImage","fetch","then","response","json","data","temp","main","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hrithikarora/Documents/SMU/Assignment/FIRST/my-app/src/components/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const Weather = () => {\n  const [temperature, setTemperature,setWeatherImage] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=Halifax,Canada&APPID=c70084a5e8a2058ce8a54ff0f61a4afe&units=metric')\n      .then((response) => response.json())\n      .then((data) => {\n        const temp = data.main.temp;\n        setTemperature(temp);\n      })\n      if (temperature <= 10) {\n        setWeatherImage('cold.png');\n      } else if (temperature > 10 && temperature < 20) {\n        setWeatherImage('mild.png');\n      } else {\n        setWeatherImage('sunny.png');\n      }\n  });\n\n  return (\n \n        <p>{temperature}Â°C</p>\n   \n  );\n};\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,EAACC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpED,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,sHAAsH,CAAC,CAC1HC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMC,IAAI,GAAGD,IAAI,CAACE,IAAI,CAACD,IAAI;MAC3BP,cAAc,CAACO,IAAI,CAAC;IACtB,CAAC,CAAC;IACF,IAAIR,WAAW,IAAI,EAAE,EAAE;MACrBE,eAAe,CAAC,UAAU,CAAC;IAC7B,CAAC,MAAM,IAAIF,WAAW,GAAG,EAAE,IAAIA,WAAW,GAAG,EAAE,EAAE;MAC/CE,eAAe,CAAC,UAAU,CAAC;IAC7B,CAAC,MAAM;MACLA,eAAe,CAAC,WAAW,CAAC;IAC9B;EACJ,CAAC,CAAC;EAEF,oBAEML,OAAA;IAAAa,QAAA,GAAIV,WAAW,EAAC,OAAE;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAG9B,CAAC;AAACf,EAAA,CAxBWD,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AA0BpB,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}